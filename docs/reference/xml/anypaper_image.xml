<?xml version="1.0"?>
<!DOCTYPE refentry PUBLIC "-//OASIS//DTD DocBook XML V4.3//EN"
               "http://www.oasis-open.org/docbook/xml/4.3/docbookx.dtd"
[
  <!ENTITY % local.common.attrib "xmlns:xi  CDATA  #FIXED 'http://www.w3.org/2003/XInclude'">
]>
<refentry id="anypaper-anypaper-image">
<refmeta>
<refentrytitle role="top_of_page" id="anypaper-anypaper-image.top_of_page">AnypaperImage</refentrytitle>
<manvolnum>3</manvolnum>
<refmiscinfo>
  ANYPAPER Library
</refmiscinfo>
</refmeta>
<refnamediv>
<refname>AnypaperImage</refname>
<refpurpose>genarates the images used by anyPaper</refpurpose>
</refnamediv>
<refsect1 id="anypaper-anypaper-image.stability-level">
<title>Stability Level</title>
Stable, unless otherwise indicated
</refsect1>

<refsynopsisdiv id="anypaper-anypaper-image.synopsis" role="synopsis">
<title role="synopsis.title">Synopsis</title>
<anchor id="AnypaperImage"/>
<synopsis>
#include &lt;anypaper_image.h&gt;

                    <link linkend="AnypaperImagePrivate">AnypaperImagePrivate</link>;
                    <link linkend="AnypaperImage-struct">AnypaperImage</link>;
<link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>            <link linkend="anypaper-image-make">anypaper_image_make</link>                 (<parameter><link linkend="AnypaperImage"><type>AnypaperImage</type></link> *image</parameter>,
                                                         <parameter><link linkend="AnypaperParameters"><type>AnypaperParameters</type></link> *parameters</parameter>);
<link linkend="void"><returnvalue>void</returnvalue></link>                <link linkend="anypaper-image-move">anypaper_image_move</link>                 (<parameter><link linkend="AnypaperImage"><type>AnypaperImage</type></link> *image</parameter>,
                                                         <parameter><link linkend="AnypaperParameters"><type>AnypaperParameters</type></link> *parameters</parameter>);
</synopsis>
</refsynopsisdiv>
<refsect1 id="anypaper-anypaper-image.object-hierarchy" role="object_hierarchy">
<title role="object_hierarchy.title">Object Hierarchy</title>
<synopsis>
  <link linkend="GObject">GObject</link>
   +----AnypaperImage
</synopsis>
</refsect1>

<refsect1 id="anypaper-anypaper-image.description" role="desc">
<title role="desc.title">Description</title>
<para>
This application class generates the images used by anyPaper
</para>
<para>
The images present in <link linkend="AnypaperImage"><type>AnypaperImage</type></link> are created by <link linkend="anypaper-image-move"><function>anypaper_image_move()</function></link> using the parameters passed to function and images previously created by <link linkend="anypaper-image-make"><function>anypaper_image_make()</function></link>. The <link linkend="anypaper-image-make"><function>anypaper_image_make()</function></link> function modifies some parameters passed by <link linkend="AnypaperParameters"><type>AnypaperParameters</type></link> (mainly positionx and positiony, for indicating the range allowed for the variables) so they must be updated.
</para>
</refsect1>
<refsect1 id="anypaper-anypaper-image.details" role="details">
<title role="details.title">Details</title>
<refsect2 id="AnypaperImagePrivate" role="struct">
<title>AnypaperImagePrivate</title>
<indexterm zone="AnypaperImagePrivate"><primary>AnypaperImagePrivate</primary></indexterm>
<programlisting>typedef struct _AnypaperImagePrivate AnypaperImagePrivate;</programlisting>
<para>
</para></refsect2>
<refsect2 id="AnypaperImage-struct" role="struct">
<title>AnypaperImage</title>
<indexterm zone="AnypaperImage-struct"><primary>AnypaperImage</primary></indexterm>
<programlisting>typedef struct {
	GdkPixbuf *image;
	GdkPixbuf *preview;
} AnypaperImage;
</programlisting>
<para>
Contains the generated images used by the program
</para><variablelist role="struct">
<varlistentry><term><link linkend="GdkPixbuf"><type>GdkPixbuf</type></link>&#160;*<structfield id="AnypaperImage-struct.image">image</structfield>;</term>
<listitem><simpara>contains the real size image created by anyPaper
</simpara></listitem>
</varlistentry>
<varlistentry><term><link linkend="GdkPixbuf"><type>GdkPixbuf</type></link>&#160;*<structfield id="AnypaperImage-struct.preview">preview</structfield>;</term>
<listitem><simpara>contains a thumbnail of the image created by anyPaper
</simpara></listitem>
</varlistentry>
</variablelist></refsect2>
<refsect2 id="anypaper-image-make" role="function">
<title>anypaper_image_make ()</title>
<indexterm zone="anypaper-image-make"><primary>anypaper_image_make</primary></indexterm>
<programlisting><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>            anypaper_image_make                 (<parameter><link linkend="AnypaperImage"><type>AnypaperImage</type></link> *image</parameter>,
                                                         <parameter><link linkend="AnypaperParameters"><type>AnypaperParameters</type></link> *parameters</parameter>);</programlisting>
<para>
Generate a <link linkend="GdkPixbuf"><type>GdkPixbuf</type></link> background and a <link linkend="GdkPixbuf"><type>GdkPixbuf</type></link> base image with the parameters selected in <link linkend="AnypaperParameters"><type>AnypaperParameters</type></link>.
</para><variablelist role="params">
<varlistentry><term><parameter>image</parameter>&#160;:</term>
<listitem><simpara>a <link linkend="AnypaperImage"><type>AnypaperImage</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>parameters</parameter>&#160;:</term>
<listitem><simpara>a <link linkend="AnypaperParameters"><type>AnypaperParameters</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> <link linkend="TRUE:CAPS"><literal>TRUE</literal></link> if the image file is successfully opened, <link linkend="FALSE:CAPS"><literal>FALSE</literal></link> if an error occurs
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="anypaper-image-move" role="function">
<title>anypaper_image_move ()</title>
<indexterm zone="anypaper-image-move"><primary>anypaper_image_move</primary></indexterm>
<programlisting><link linkend="void"><returnvalue>void</returnvalue></link>                anypaper_image_move                 (<parameter><link linkend="AnypaperImage"><type>AnypaperImage</type></link> *image</parameter>,
                                                         <parameter><link linkend="AnypaperParameters"><type>AnypaperParameters</type></link> *parameters</parameter>);</programlisting>
<para>
Generate the <link linkend="GdkPixbuf"><type>GdkPixbuf</type></link> image and the <link linkend="GdkPixbuf"><type>GdkPixbuf</type></link> preview present in <link linkend="AnypaperImage"><type>AnypaperImage</type></link> struct with the parameters selected in <link linkend="AnypaperParameters"><type>AnypaperParameters</type></link> and the images created by <link linkend="anypaper-image-make"><function>anypaper_image_make()</function></link>
</para><variablelist role="params">
<varlistentry><term><parameter>image</parameter>&#160;:</term>
<listitem><simpara>a <link linkend="AnypaperImage"><type>AnypaperImage</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>parameters</parameter>&#160;:</term>
<listitem><simpara>a <link linkend="AnypaperParameters"><type>AnypaperParameters</type></link>
</simpara></listitem></varlistentry>
</variablelist></refsect2>

</refsect1>
<refsect1 id="anypaper-anypaper-image.see-also">
<title>See Also</title>
<link linkend="AnypaperParameters"><type>AnypaperParameters</type></link>
</refsect1>

</refentry>
